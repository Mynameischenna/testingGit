<form>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <input type="text" class="form-control" id="planYearEnds">
                        <label for="planYearEnds">Plan Year Ends</label>
                    </div>
                    <div class="form-group col-md-4">
                        <button type="button" class="btn btn-secondary" id="servicesAndBilling">Services And Billing</button>
                    </div>
                    <div class="form-group col-md-4">
                        <button type="button" class="btn btn-secondary" id="pyeTesting1">PYE Testing</button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-2">
                        <label>YEAR END INFO</label>
                    </div>
                    <div class="form-group col-md-2">
                        <label>COUNTS</label>
                    </div>
                    <div class="form-group col-md-8">
                        <label>5500 INFO</label>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="yearEnd">
                        <label for="yearEnd">Year End</label>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="eligibleEmployees">
                        <label for="eligibleEmployees">Eligible Employees</label>
                    </div>
                    <div class="form-group col-md-2">
                        <button type="button" class="btn btn-primary" id="xml5500">5500 XML</button>
                        <button type="button" class="btn btn-primary" id="email5500">5500 Email</button>
                    </div>
                    <div class="form-group col-md-3">
                        <input type="text" class="form-control" id="type5500">
                        <label for="type5500">5500 Type</label>
                    </div>
                    <div class="form-group col-md-3">
                        <input type="text" class="form-control" id="filingStatus">
                        <label for="filingStatus">Filing Status</label>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="yearStart">
                        <label for="yearStart">Year Start</label>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="totalEmployees">
                        <label for="totalEmployees">Total Employees</label>
                    </div>
                    <div class="form-group col-md-2">
                        <button type="button" class="btn btn-primary" id="yeq">YEQ</button>
                        <button type="button" class="btn btn-primary" id="dfvcEmail">DFVC Email</button>
                    </div>
                    <div class="form-group col-md-3">
                        <input type="text" class="form-control" id="signer5500">
                        <label for="signer5500">5500 Signer</label>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" id="partial5500" type="checkbox"> 5500 Partial
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="taxYear">
                        <label for="taxYear">Tax Year</label>
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                    <div class="form-group col-md-2">
                        <button type="button" class="btn btn-primary" id="resetPortalUser">Reset Portal User</button>
                        <button type="button" class="btn btn-primary" id="addCompanyToFTW">Add Company to FTW</button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="pointsValue">
                        <label for="pointsValue">Points Value</label>
                    </div>
                    <div class="form-group col-md-2">
                        <button type="button" class="btn btn-primary" id="contributionSources">Contribution Sources</button>
                        <button type="button" class="btn btn-primary" id="moveItemsToPSC">Move Items To PSC</button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>SERVICES</label>
                    </div>
                    <div class="form-group col-md-6">
                        <label>FORFEITURE INFO</label>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="planDocument"> Plan Document
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="yearEndComplianceTesting"> Year End
                                Compliance Testing
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="matchForfType">
                        <label for="matchForfType">Match Forf Type</label>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="matchForfAmt">
                        <label for="matchForfAmt">Match Forf Amt</label>
                    </div>
                    <div class="form-group col-md-2">
                        <button type="button" class="btn btn-primary" id="folder">Folder</button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="midYrComplianceTesting"> Mid Yr
                                Compliance Testing
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="preparation5500"> 5500 Preparation
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="psForfType">
                        <label for="psForfType">P/S Forf Type</label>
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" class="form-control" id="psForfAmt">
                        <label for="psForfAmt">P/S Forf Amt</label>
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="employerAllocations"> Employer
                                Allocations
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="matchingAllocations"> Matching
                                Allocations
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="unusedForfeitures"> Unused
                                Forfeitures
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="shMatchCalc"> SH Match - Calc
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="shNonElectiveCalc"> SH Non Elective
                                - Calc
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                    <div class="form-group col-md-2">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>SCRIPTING</label>
                    </div>
                    <div class="form-group col-md-6">
                        <label>PLAN FEATURES</label>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="mmlContribution"> MML Contribution
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="stopAutomation"> Stop Automation
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="easyEligibility"> EASY Eligibility
                            </label>
                        </div>
                        <input type="text" class="form-control" id="ascNumber">
                        <label for="ascNumber">ASC Number</label>
                    </div>
                    <div class="form-group col-md-3">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="safeHarborPlan"> Safe Harbor Plan
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="safeHarborAdpAcp"> Safe Harbor
                                ADP/ACP
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="simplePlan"> Simple Plan
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="newComp"> New Comp
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="ageWeighted"> Age Weighted
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="afterTax"> After Tax
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="nonErisaPlan"> Non Erisa Plan
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="matchOnlyPlan"> Match Only Plan
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="qaca"> QACA
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="eaca"> EACA (6 month correction)
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="svcMatch"> Svc Match
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="nav"> NAV
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="pdiData"> PDI Data
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="lifeInsurance"> Life Insurance
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="churchCertiInsert"> Church Certi
                                Insert
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="noCatchup"> No Catch-up
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="multipleEr"> Multiple ER
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="controlledGroup"> Controlled Group
                            </label>
                        </div>
                        <button type="button" class="btn btn-primary" id="controlledGroupButton">Controlled Group</button>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input type="checkbox" class="form-check-input" id="testByLocation"> Test By Location
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-12">
                        <input type="text" class="form-control" id="installationNote">
                        <label for="installationNote">Comments</label>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-3">
                        <button type="button" class="btn btn-primary" id="planSpecs">Plan Specs</button>
                    </div>
                    <div class="form-group col-md-3">
                        <button type="button" class="btn btn-primary" id="pyeTesting2">PYE Testing</button>
                    </div>
                    <div class="form-group col-md-3">
                        <button type="button" class="btn btn-primary" id="pyeQa">PYE QA</button>
                    </div>
                    <div class="form-group col-md-3">
                        <button type="button" class="btn btn-primary" id="teamChecklist">Team Checklist</button>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
package com.empower.email;

import java.io.IOException;
import java.io.InputStream;

//import java.net.http.HttpHeaders;
import org.springframework.http.HttpHeaders;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.http.MediaType;
import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.UrlResource;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


@RestController
@CrossOrigin("*")
public class Emailcon {
	@Autowired
	private JavaMailSender mailsend;
	private static final String UPLOAD_DIR = "D:\\python presidency";
	
	@GetMapping("/files")
    public ResponseEntity<List<String>> getFiles() {
        try {
            // List all files in the directory
            List<String> files = Arrays.stream(Paths.get(UPLOAD_DIR).toFile().list())
                    .collect(Collectors.toList());
            return ResponseEntity.ok(files);
        } catch (Exception e) {
            return ResponseEntity.status(500).body(null);
        }
    }
//	@GetMapping("/{filename}")
//	public static void openFile(@PathVariable String filePath) {
//        try {
//            // Convert the file path to a URI
//            URI uri = Paths.get(filePath).toUri();
//
//            // Open the file with the default system application
//            Desktop.getDesktop().browse(uri);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//    }

//	@GetMapping("/{filename}")
//	public ResponseEntity<UrlResource> downloadFile(@PathVariable String filename) {
//	    try {
//	        // Load file as UrlResource
//	        Path filePath = Paths.get(UPLOAD_DIR).resolve(filename).normalize();
//	        UrlResource urlResource = new UrlResource(filePath.toUri());
//
//	        // Check if the file exists
//	        if (urlResource.exists()) {
//	            return ResponseEntity.ok()
//	                    .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + urlResource.getFilename() + "\"")
//	                    .body(urlResource);
//	        } else {
//	            return ResponseEntity.status(404).body(null);
//	        }
//	    } catch (IOException e) {
//	        return ResponseEntity.status(500).body(null);
//	    }
//	}
	
	

	// ... (other imports)

	@GetMapping("/{filename}")
    public ResponseEntity<byte[]> downloadFile(@PathVariable String filename) {
        try {
            // Load file content as bytes
            Path filePath = Paths.get(UPLOAD_DIR).resolve(filename).normalize();
            byte[] fileContent = Files.readAllBytes(filePath);

            // Determine the media type based on the file extension
            MediaType mediaType = determineMediaType(filename);

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(mediaType);

            return ResponseEntity.ok()
                    .headers(headers)
                    .body(fileContent);
        } catch (IOException e) {
            return ResponseEntity.status(500).body(null);
        }
    }

    private MediaType determineMediaType(String filename) {
        String fileExtension = filename.substring(filename.lastIndexOf('.') + 1).toLowerCase();

        switch (fileExtension) {
        	case "xml":
        		return MediaType.APPLICATION_ATOM_XML;
        	case "json":
        		return MediaType.APPLICATION_JSON;
            case "pdf":
                return MediaType.APPLICATION_PDF;
            case "jpg":
            case "jpeg":
            case "png":
            case "gif":
                return MediaType.IMAGE_JPEG; // or MediaType.IMAGE_PNG for PNG files
            // Add more cases for other file types if needed
            default:
                return MediaType.APPLICATION_OCTET_STREAM;
        }
    }
    

	@PostMapping("/balu")
	public void adds()
	{
		System.out.println("hello adds");
	}
	@PostMapping("/gmail")
	public void fun1(@RequestBody Emailentity entity)
	{
		SimpleMailMessage message=new SimpleMailMessage();
		message.setTo(entity.getTo());
		message.setSubject(entity.getSubject());
		message.setText(entity.getBody());
		mailsend.send(message);
		System.out.println("message");
	}
}



import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.http.MediaType;
import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.UrlResource;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
@GetMapping("/files")
    public ResponseEntity<List<String>> getFiles() {
        try {
            // List all files in the directory
            List<String> files = Arrays.stream(Paths.get(UPLOAD_DIR).toFile().list())
                    .collect(Collectors.toList());
            return ResponseEntity.ok(files);
        } catch (Exception e) {
            return ResponseEntity.status(500).body(null);
        }
    }


@GetMapping("/{filename}")
    public ResponseEntity<byte[]> downloadFile(@PathVariable String filename) {
        try {
            // Load file content as bytes
            Path filePath = Paths.get(UPLOAD_DIR).resolve(filename).normalize();
            byte[] fileContent = Files.readAllBytes(filePath);

            // Determine the media type based on the file extension
            MediaType mediaType = determineMediaType(filename);

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(mediaType);

            return ResponseEntity.ok()
                    .headers(headers)
                    .body(fileContent);
        } catch (IOException e) {
            return ResponseEntity.status(500).body(null);
        }
    }

    private MediaType determineMediaType(String filename) {
        String fileExtension = filename.substring(filename.lastIndexOf('.') + 1).toLowerCase();

        switch (fileExtension) {
        	case "xml":
        		return MediaType.APPLICATION_ATOM_XML;
        	case "json":
        		return MediaType.APPLICATION_JSON;
            case "pdf":
                return MediaType.APPLICATION_PDF;
            case "jpg":
            case "jpeg":
            case "png":
            case "gif":
                return MediaType.IMAGE_JPEG; // or MediaType.IMAGE_PNG for PNG files
            // Add more cases for other file types if needed
            default:
                return MediaType.APPLICATION_OCTET_STREAM;
        }
    }
ompx rsvq bfaw zdyv

<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-mail</artifactId>
</dependency>

spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=your-email@example.com
spring.mail.password=your-email-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class EmailController {

    @Autowired
    private JavaMailSender emailSender;

    @PostMapping("/sendEmail")
    public void sendEmail(@RequestBody EmailRequest emailRequest) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(emailRequest.getTo());
        message.setSubject(emailRequest.getSubject());
        message.setText(emailRequest.getBody());

        emailSender.send(message);
    }
}





const [loading, setLoading] = useState(true); // Added loading state



@RestController
@RequestMapping("/api/files")
public class FileController {

    private static final String D_DRIVE_PATH = "D:/your/folder/path/";

    @GetMapping("/list")
    public ResponseEntity<List<String>> getFileList() {
        File folder = new File(D_DRIVE_PATH);
        String[] fileList = folder.list();
        return ResponseEntity.ok(Arrays.asList(fileList));
    }

    @GetMapping("/download")
    public ResponseEntity<Resource> downloadFile(@RequestParam String fileName) throws IOException {
        File file = new File(D_DRIVE_PATH + fileName);
        InputStreamResource resource = new InputStreamResource(new FileInputStream(file));

        HttpHeaders headers = new HttpHeaders();
        headers.add(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=" + fileName);

        return ResponseEntity.ok()
                .headers(headers)
                .contentLength(file.length())
                .contentType(MediaType.APPLICATION_OCTET_STREAM)
                .body(resource);
    }
}




react:


import React, { useState, useEffect } from 'react';
import axios from 'axios';

const FileList = () => {
  const [files, setFiles] = useState([]);

  useEffect(() => {
    // Fetch the list of files from the backend
    axios.get('http://your-backend-url/api/files/list')
      .then(response => setFiles(response.data))
      .catch(error => console.error('Error fetching file list:', error));
  }, []);

  const handleFileClick = (fileName) => {
    // Download the selected file from the backend
    window.open(`http://your-backend-url/api/files/download?fileName=${fileName}`);
  };

  return (
    <div>
      <h2>File List:</h2>
      <ul>
        {files.map((file, index) => (
          <li key={index} onClick={() => handleFileClick(file)}>
            {file}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default FileList;






import org.springframework.core.io.InputStreamResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

@RestController
public class FileController {

    private static final String D_DRIVE_PATH = "D:/your/folder/path/";

    @GetMapping("/api/files/download")
    public ResponseEntity<InputStreamResource> downloadFile(@RequestParam String fileName) throws IOException {
        File file = new File(D_DRIVE_PATH + fileName);

        if (file.exists()) {
            HttpHeaders headers = new HttpHeaders();
            headers.add(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=" + fileName);

            InputStreamResource resource = new InputStreamResource(new FileInputStream(file));

            return ResponseEntity.ok()
                    .headers(headers)
                    .contentLength(file.length())
                    .contentType(MediaType.APPLICATION_OCTET_STREAM)
                    .body(resource);
        } else {
            return ResponseEntity.notFound().build();
        }
    }
}
